% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tin.R
\name{tin}
\alias{tin}
\alias{tin.character}
\alias{tin.matrix}
\alias{tin.list}
\alias{print.t2d_tin}
\title{TIN object}
\usage{
tin(x, ...)

\method{tin}{character}(x, ...)

\method{tin}{matrix}(x, ..., ikle, ipobo)

\method{tin}{list}(x, ..., s, s_brk, a, q = 30)

\method{print}{t2d_tin}(x, ...)
}
\arguments{
\item{x}{Either: a \code{character} string providing the name of a SELAFIN
file of which the mesh will be extracted;
a \code{matrix} of mesh points with 2 columns containing the x and y coordinates
(arguments \code{ikle} and \code{ipobo} are required);
a \code{list} with boundary and breakline definitions (see \code{Details}).}

\item{...}{Arguments passed to or from other methods. If \code{x} is a \code{list},
further arguments passed to \code{\link[RTriangle]{triangulate}}.}

\item{ikle}{If \code{x} is a matrix of points: A \code{matrix} with 3 columns
of indices referring to rows in \code{x}; each row represents a mesh
element (triangle). In TELEMAC termed \code{IKLE}.}

\item{ipobo}{If \code{x} is a matrix of points: A \code{vector} of indices referring
to rows in \code{x}, each marking a boundary point. In TELEMAC termed \code{IPOBO}.}

\item{s}{\code{numeric}, if \code{x} is a \code{list}: OPTIONAL value giving the
resolution of vortices along the boundary line for triangulation. If not given,
the points are used as they are supplied, otherwise \code{line_spacing} is called to ensure
equal spacing of vortices with the given segment lengths.}

\item{s_brk}{As \code{s} but for breaklines.}

\item{a}{\code{numeric}, maximum triangle area; passed to \code{\link[RTriangle]{triangulate}}.
Default: squared spacing of points (either given as \code{s} or inferred from \code{x$boundary}).}

\item{q}{\code{numeric}, minimum triangle angle; passed to \code{\link[RTriangle]{triangulate}}.
Default: 30 degrees.}
}
\value{
An object of class \code{t2d_tin}, which is a list with the following elements:
\describe{
  \item{points}{A \code{matrix} with the x and y coordinates (as columns) of mesh points.}
  \item{triangles}{A \code{matrix} with 3 columns of indices referring to rows in
    \code{points}; each row represents a mesh element (triangle).}
  \item{edges}{A \code{matrix} with 2 columns of indices referring to rows in
    \code{points}, the node points; each row represents an edge / segment of a triangle.}
  \item{boundaries}{A \code{vector} of indices referring to rows in \code{points}, each
    marking a point of the outer catchment boundary.}
  \item{breaklines}{A \code{matrix} with 2 columns of indices referring to rows in
    \code{points}, the vertices of the breaklines (used for mesh refinement during
    triangulation).}
}
}
\description{
Initialise a TIN mesh object for use within TELEMAC.
}
\details{
If \code{x} is a \code{list} this function creates a Triangulated Irregular Network
(TIN) using function \code{\link[RTriangle]{triangulate}}. The following \code{list}
elements are required to perform the triangulation:
\describe{
  \item{boundary}{A \code{matrix}, \code{data.frame}, \code{SpatialLines*} or \code{sf} object
    with two columns, each row defining a point along
    the outer catchment boundary. Points are connected one-by-one to a line starting
    with the first point, i.e. make sure points are in the right order! The first and
    last point will be connected to close the boundary.}
  \item{breaklines}{OPTIONAL, a \code{matrix}, \code{data.frame}, \code{SpatialLines*} or \code{sf}
    object with three columns
    \code{x} and \code{y}, the x and y coordinates of vortices along the breaklines,
    and \code{line}, an identifier to identify individual breaklines.}
}
}
\note{
Duplicated mesh points are silently removed.

Make sure breaklines do not intersect as this is not supported by the Triangle
algorithm.
}
